@model hager_crm.Models.Company
@using static hager_crm.Utils.Capitalizator

@{
    ViewData["Title"] = "Delete Company";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Delete @Model.Name? (@(Model.Active ? "Active" : "Inactive"))</h1>
<hr />
<div>
    <form asp-action="Delete">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" name="returnURL" value="@ViewData["returnURL"]" />
        <ul class="nav nav-pills" id="myTabs" role="tablist">
            <li class="nav-item">
                <a href="#basic" aria-controls="basic-tab" role="tab" class="nav-link active" name="basic" data-toggle="tab" aria-selected="false">Basic Information</a>
            </li>
            <li class="nav-item">
                <a href="#address" aria-controls="address-tab" role="tab" class="nav-link" name="address" data-toggle="tab" aria-selected="false">Billing and Shipping</a>
            </li>
            <li class="nav-item">
                <a href="#moreinfo" aria-controls="moreinfo-tab" role="tab" class="nav-link" name="moreinfo" data-toggle="tab" aria-selected="false">More Information</a>
            </li>
        </ul>

        <div class="tab-content">
            <div role="tabpanel" class="tab-pane fade ml-3 show active" id="basic" aria-labelledby="basic-tab">
                <br />
                <dl class="row">
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.Name)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.Name)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.Location)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.Location)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.CreditCheck)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.CreditCheck)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.DateChecked)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.DateChecked)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.BillingTerm)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.BillingTerm.Terms)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.Currency)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.Currency.CurrencyName)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.Phone)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.Phone)
                    </dd>
                    <dt class="col-sm-3 my-2">
                        @Html.DisplayNameFor(model => model.Website)
                    </dt>
                    <dd class="col-sm-9 my-2">
                        @Html.DisplayFor(model => model.Website)
                    </dd>
                </dl>
            </div>

            <div role="tabpanel" class="tab-pane fade ml-3" id="address" aria-labelledby="address-tab">
                <br />
                <dl class="row">
                    <dt class="col-sm-3 mt-2 mb-0">
                        Billing Address
                    </dt>
                    <dd class="col-sm-9 mt-2 mb-0">
                        @Html.DisplayFor(model => model.BillingAddress1)@if (!String.IsNullOrEmpty(Model.BillingAddress2))
                        {
                            @:, @Html.DisplayFor(model => model.BillingAddress2),
                        } @Html.DisplayFor(model => model.BillingPostalCode)
                    </dd>
                    <dt class="col-sm-3 mt-0 mb-2">
                    </dt>
                    <dd class="col-sm-9 mt-0 mb-2">
                        @Html.DisplayFor(model => model.BillingProvince.ProvinceName)@if (!String.IsNullOrEmpty(Model.BillingCountry?.CountryName))
                        {
                            @:, @Html.DisplayFor(model => model.BillingCountry.CountryName)
                        }
                    </dd>
                    <dt class="col-sm-3 mt-2 mb-0">
                        Shipping Address
                    </dt>
                    <dd class="col-sm-9 mt-2 mb-0">
                        @Html.DisplayFor(model => model.ShippingAddress1)@if (!String.IsNullOrEmpty(Model.ShippingAddress2))
                        {
                            @:, @Html.DisplayFor(model => model.ShippingAddress2),
                        }@Html.DisplayFor(model => model.ShippingPostalCode)
                    </dd>
                    <dt class="col-sm-3 mt-0 mb-2">
                    </dt>
                    <dd class="col-sm-9 mt-0 mb-2">
                        @Html.DisplayFor(model => model.ShippingProvince.ProvinceName)@if (!String.IsNullOrEmpty(Model.ShippingCountry?.CountryName))
                        {
                            @:, @Html.DisplayFor(model => model.ShippingCountry.CountryName)
                        }
                    </dd>
                </dl>
            </div>

            <div role="tabpanel" class="tab-pane fade ml-3" id="moreinfo" aria-labelledby="moreinfo-tab">
                <br />
                <div class="row">
                    @foreach (var cat in (Dictionary<string, List<hager_crm.ViewModels.CompanyTypesDto>>)ViewData["CompanyTypes"])
                    {
                        <div class="col-xl-4 col-md-6 col-12 p-4">
                            <div class="card">
                                <div class="card-header">
                                    @cat.Key.Capitalize() Types
                                </div>
                                <div class="list-group" style="overflow-y: auto; height: 355px">
                                    @foreach (var item in cat.Value)
                                    {
                                        <div class="lookup-list-item list-group-item d-flex justify-content-between pr-2"
                                             data-item-id="@item.TypeID"
                                             href="#">
                                            <div class="display-name d-flex m-auto">@item.DisplayName</div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    <div class="col-xl-4 col-md-6 col-12 p-4">
                        <div class="card">
                            <div class="card-header">Notes</div>
                            <div class="p-4" style="overflow-y: auto; height: 355px">
                                @Html.DisplayFor(model => model.Notes)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <input type="hidden" asp-for="CompanyID" />
        <input type="hidden" name="CType" id="CType" value="@Context.Request.Query["CType"]" />
        <input type="submit" value="Delete" class="btn btn-danger" />
        <a class="btn btn-secondary" href='@ViewData["returnURL"]'>Back to @Context.Request.Query["CType"] Company List</a>
    </form>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(document).ready(function () {
        $("#@Context.Request.Query["CType"].ToString().ToLower()CompaniesSubmenu").attr("style", "color: #862633; background: #fff;");
    })
</script>