@model IEnumerable<hager_crm.Models.Company>
@using hager_crm.Helpers;
@using hager_crm.Utils;

@{
    ViewData["Title"] = @ViewData["CType"] + " Companies";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var gridFilter = ViewBag.gridFilter;
    var sorts = gridFilter.OuterSorts;
    int changeColer = (int)@ViewData["ChangeColor"];
}

<h1>@Context.Request.Query["CType"] Company List</h1>
<hr />

@if (ViewBag.DuplicationCompany != null)
{
    Tuple<Company, Company> companyTuple = ViewBag.DuplicationCompany;
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <h4 class="alert-heading">Duplication alert!</h4>
        <p style="color: inherit;">
            Company "@(companyTuple.Item2.Name)" and Company "@(companyTuple.Item1.Name)" look similar,
            would you like to compare them and merge?
        </p>
        <hr>
        <a href="@Url.Action("Compare", "Companies", new { leftCompanyId = companyTuple.Item2.CompanyID, rightCompanyId = companyTuple.Item1.CompanyID, })"
           class="btn btn-outline-warning alert-warning">Compare</a>
        <button type="button" class="btn btn-outline-secondary alert-warning" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">Dismiss</span>
        </button>
    </div>
}


@if (User.IsInRole("Admin") || User.IsInRole("Supervisor"))
{
<div>
    <a class="btn btn-outline-primary my-2" asp-action="Create" asp-route-CType="@Context.Request.Query["CType"]">Add New</a>
    <button type="button" class="btn btn-outline-primary my-2" data-toggle="collapse" data-target="#collapseImport" aria-expanded="false" aria-controls="collapseImport">Import Companies</button>
    <button type="button"
            class="btn btn-outline-primary my-2"
            data-toggle="collapse"
            data-target="#collapseMerge"
            aria-expanded="false"
            aria-controls="collapseMerge">
        Merge Companies
    </button>
    @if (changeColer == 0)
    {
        @Html.GenerateFiltering((IGridFilterFilterable)gridFilter)
    }
    else
    {
        @Html.GenerateFiltered((IGridFilterFilterable)gridFilter)
    }

    <form class="collapse my-3" id="collapseImport" asp-action="InsertFromExcelCompany" asp-controller="Companies" method="post" enctype="multipart/form-data">
        <div class="form-horizontal">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="custom-file col-md-4">
                        <label for="theExcel" class="custom-file-label">
                            Upload Excel File:
                        </label>
                        <input id="theExcel" name="theExcel" type="file" class="custom-file-input">
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <input type="submit" value="Upload Data" class="btn btn-primary" />
                        </div>
                    </div>
                    <div class="custom-file col-md-4">
                        <p><a href="/templates/Companies_Import_Template_V4.xlsx" download> Click to Download Template</a></p>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="collapse my-3" id="collapseMerge">
        <div class="form-horizontal">
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label for="leftMerge">
                            From Company
                        </label>
                        <div class="input-group mb-3">
                            <input id="leftMerge" name="leftMerge" class="form-control" disabled data-id="">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-danger merge-company-remove">
                                    &times;
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label for="rightMerge">
                            To Company
                        </label>
                        <div class="input-group mb-3">
                            <input id="rightMerge" name="rightMerge" class="form-control" disabled data-id="">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-danger merge-company-remove">
                                    &times;
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-md-4">
                        <div class="form-group">
                            <input type="submit" value="Compare Companies" class="btn btn-primary merge-company-compare" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}
else
{
    @Html.GenerateFiltering((IGridFilterFilterable)gridFilter)
}
<div class="overflow-auto">
    <table class="table text-center">
        <thead>
            <tr>
                <th>
                    <a class="data-sortable" data-name="Name">
                        <span>@Html.DisplayNameFor(model => model.Name)</span>
                        <span class="caret
                          @(sorts["OrderField"] == "Name" && sorts["OrderDir"] == "DESC" ? "up" : "down")">
                        </span>
                    </a>
                </th>
                <th>
                    Location
                </th>
                <th>
                    Phone
                </th>
                <th>
                    <a class="data-sortable" data-name="Active">
                        <span>@Html.DisplayNameFor(model => model.Active)</span>
                        <span class="caret
                        @(sorts["OrderField"] == "Active" && sorts["OrderDir"] == "DESC" ? "up" : "down")">
                        </span>
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Location)@if (!String.IsNullOrEmpty(item.BillingProvince?.ProvinceAbbr))
                        {
                            @:, @Html.DisplayFor(modelItem => item.BillingProvince.ProvinceAbbr)
                        }@if (!String.IsNullOrEmpty(item.BillingCountry?.CountryAbbr))
                        {
                            @:, @Html.DisplayFor(modelItem => item.BillingCountry.CountryAbbr)
                        }
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Active)
                    </td>
                    <td class="align-middle">
                        @if (User.IsInRole("Admin") || User.IsInRole("Supervisor"))
                        {
                            <div class="row w-100">
                                <a class="btn btn-sm btn-outline-primary col-12 col-xl-6" asp-action="Details" asp-route-id="@item.CompanyID" asp-route-CType="@Context.Request.Query["CType"]">Details</a>
                                <a class="btn btn-sm btn-outline-info col-12 col-xl-6" asp-action="Edit" asp-route-id="@item.CompanyID" asp-route-CType="@Context.Request.Query["CType"]">Edit</a>
                                <button class="btn btn-sm btn-outline-secondary col-12 col-xl-6 merge-company-select" data-id="@item.CompanyID" data-companyname="@item.Name">Select for merge</button>
                                <a class="btn btn-sm btn-outline-danger col-12 col-xl-6" asp-action="Delete" asp-route-id="@item.CompanyID" asp-route-CType="@Context.Request.Query["CType"]">Delete</a>
                            </div>
                        }
                        else
                        {
                            <a class="btn btn-sm btn-outline-dark px-3" asp-action="Details" asp-route-id="@item.CompanyID" asp-route-CType="@Context.Request.Query["CType"]">Details</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @if (!Model.Any())
    {
        <h4 class="text-center">There is no data found...</h4>
    }
    @Html.GeneratePagination((IGridFilterPaginatable)gridFilter)
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    const FILTER_URL = "@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}")";
    const cType = ['All', 'Customer', 'Vendor', 'Contractor'];
    const url = new URLSearchParams(window.location.search);
    $(document).ready(function () {
        $("#@Context.Request.Query["CType"].ToString().ToLower()CompaniesSubmenu").attr("style", "color: #862633; background: #fff;");
    })
</script>
<script type="text/javascript">
    $('#theExcel').change(function () {
        var i = $(this).prev('label').clone();
        var file = $('#theExcel')[0].files[0].name;
        $(this).prev('label').text(file);
    });

    $(document).ready(function () {
        let locationUrl = "@Url.Action("Compare", "Companies", new { leftCompanyId = "leftId", rightCompanyId = "rightId", })";
        let $leftMerge = $('#leftMerge');
        let $rightMerge = $('#rightMerge');

        $leftMerge.data('id', localStorage.getItem($leftMerge.attr('id')+'Id') || '');
        $leftMerge.val(localStorage.getItem($leftMerge.attr('id')+'Name') || '');
        $rightMerge.data('id', localStorage.getItem($rightMerge.attr('id') + 'Id') || '');
        $rightMerge.val(localStorage.getItem($rightMerge.attr('id') + 'Name') || '');

        function AddMerge(ev) {
            ev.preventDefault();
            let target = ev.target;
            let $merge = null;
            let id = $(target).data('id');
            let companyName = $(target).data('companyname');
            if ($leftMerge.data('id') == id || $rightMerge.data('id') == id) {
                alert('This company already selected');
                return;
            }
            if (!$leftMerge.data('id')) {
                alert('Selected from company!');
                $merge = $leftMerge;

            } else if (!$rightMerge.data('id')) {
                $merge = $rightMerge;
                alert('Selected to company!');
            } else {
                alert('Companies to merge have been chosen. Please edit selected companies before proceed... ');
                return;
            }

            $merge.data('id', id);
            $merge.val(companyName);
            localStorage.setItem($merge.attr('id') + 'Id', id);
            localStorage.setItem($merge.attr('id') + 'Name', companyName);
        }

        function RemoveMerge(ev) {
            ev.preventDefault();
            let $merge = $(ev.target).parent().siblings('input');
            $merge.data('id', '');
            $merge.val('');
            localStorage.setItem($merge.attr('id') + 'Id', '');
            localStorage.setItem($merge.attr('id') + 'Name', '');
        }

        function ResetSelection() {
            for (let $merge of [$leftMerge, $rightMerge]) {
                $merge.data('id', '');
                $merge.val('');
                localStorage.setItem($merge.attr('id') + 'Id', '');
                localStorage.setItem($merge.attr('id') + 'Name', '');
            }
        }

        function RelocateToCompare() {
            if (!$leftMerge.data('id') || !$rightMerge.data('id')) {
                alert("Please select both companies before proceed...");
                return;
            }
            let url = locationUrl.replace('leftId', $leftMerge.data('id')).replace('rightId', $rightMerge.data('id'));
            ResetSelection();
            window.location = url;
        }

        $('.merge-company-select').click(AddMerge);
        $('.merge-company-remove').click(RemoveMerge);
        $('.merge-company-compare').click(RelocateToCompare);
    });
</script>
