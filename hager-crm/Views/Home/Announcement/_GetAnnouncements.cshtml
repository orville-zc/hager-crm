@model System.Collections.Generic.List<hager_crm.Models.Announcement>

<div class="mb-1 p-2" style="min-height: 200px; max-height: 500px; overflow-y: auto">
    @if (Model.Any())
    {
        @foreach (var announcement in Model)
        {
            <div class="alert alert-@announcement.GetSeverity() alert-dismissible fade show mb-1" role="alert">
                <h5>@announcement.Title</h5>
                @announcement.Message
                <hr class="my-1">
                <span class="small">@announcement.PostedAt.ToString("f")</span>
                <button type="button" class="close" aria-label="Close" data-id="@announcement.AnnouncementID" onclick="DeleteAnnouncement(this)">
                    <span class="small" aria-hidden="true">🗑️</span>
                </button>
            </div>
        }
    }
    else
    {
        <h5 class="mt-3 text-center">No new announcements</h5>
    }
</div>
<hr class="m-0 mb-2"/>
<button class="btn btn-primary m-2" type="button" data-toggle="collapse" data-target="#announcementCollapse" aria-expanded="false" aria-controls="announcementCollapse">
    Create new announcement
</button>
<div class="collapse" id="announcementCollapse">
    <div class="card-body">
        <form id="postAnnouncement" onsubmit="return PostAnnouncement(this)">
            <div class="form-group">
                <label for="announcementTitle">Title</label>
                <input class="form-control" id="announcementTitle" minlength="4" maxlength="64" required>
            </div>
            <div class="form-group">
                <label for="announcementMessage">Message</label>
                <textarea class="form-control" id="announcementMessage" rows="3" minlength="16" maxlength="256" required></textarea>
            </div>
            <div class="form-group">
                <label for="announcementSeverity">Severity</label>
                <select class="form-control" id="announcementSeverity" required>
                    @{
                        var zippedEnum = Enum.GetNames(typeof(AnnouncementSeverity))
                            .Zip((int[]) Enum.GetValues(typeof(AnnouncementSeverity)), (n, v) => new {value = v, name = n});
                    }
                    @foreach (var type in zippedEnum)
                    {
                        <option value="@type.value">@type.name</option>
                    }
                </select>
            </div>
            <button type="submit" class="btn btn-primary">Post Announcement</button>
        </form>
    </div>
</div>